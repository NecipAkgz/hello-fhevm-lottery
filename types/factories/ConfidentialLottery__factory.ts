/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  ConfidentialLottery,
  ConfidentialLotteryInterface,
} from "../ConfidentialLottery";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LotteryReset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PrizeClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "ticket",
        type: "uint8",
      },
    ],
    name: "TicketPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "winningNumber",
        type: "uint8",
      },
    ],
    name: "WinnerDrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_ticketNumber",
        type: "uint8",
      },
    ],
    name: "buyTicket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_roundIndex",
        type: "uint256",
      },
    ],
    name: "claimPastPrize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimPrize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "drawWinner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyTicket",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getParticipantCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPastRoundsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isDrawn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastDrawTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "participants",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pastRounds",
    outputs: [
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "prize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "drawTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startNewRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ticketPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052655af3107a4000600255348015610019575f80fd5b50600480546001600160a01b03191633179055610e89806100395f395ff3fe6080604052600436106100ef575f3560e01c80635cbbd63511610087578063bd85948c11610057578063bd85948c14610255578063dfbf53ae14610269578063f851a44014610288578063fd9ba024146102a7575f80fd5b80635cbbd6351461020457806370740ac914610219578063ad6057291461022d578063b2185bb114610241575f80fd5b806335c1d349116100c257806335c1d349146101525780633c2bcadc146101895780633f7daf81146101b95780635b0df84e146101e5575f80fd5b8063023697f0146100f357806312065fe0146101085780631209b1f61461012957806313cd372e1461013e575b5f80fd5b610106610101366004610da2565b6102f2565b005b348015610113575f80fd5b50475b6040519081526020015b60405180910390f35b348015610134575f80fd5b5061011660025481565b348015610149575f80fd5b50600654610116565b34801561015d575f80fd5b5061017161016c366004610dc9565b610522565b6040516001600160a01b039091168152602001610120565b348015610194575f80fd5b506001546101a990600160a01b900460ff1681565b6040519015158152602001610120565b3480156101c4575f80fd5b50335f908152602081815260409182902054915160ff909216825201610120565b3480156101f0575f80fd5b506101066101ff366004610dc9565b61054a565b34801561020f575f80fd5b5061011660055481565b348015610224575f80fd5b50610106610793565b348015610238575f80fd5b50600354610116565b34801561024c575f80fd5b5061010661095e565b348015610260575f80fd5b50610106610c6a565b348015610274575f80fd5b50600154610171906001600160a01b031681565b348015610293575f80fd5b50600454610171906001600160a01b031681565b3480156102b2575f80fd5b506102c66102c1366004610dc9565b610d27565b604080516001600160a01b03909516855260208501939093529183015215156060820152608001610120565b60025434146103485760405162461bcd60e51b815260206004820152601660248201527f496e636f7272656374207469636b65742070726963650000000000000000000060448201526064015b60405180910390fd5b600154600160a01b900460ff16156103a25760405162461bcd60e51b815260206004820152601560248201527f4c6f747465727920616c726561647920647261776e0000000000000000000000604482015260640161033f565b60018160ff16101580156103ba575060648160ff1611155b6104065760405162461bcd60e51b815260206004820152601c60248201527f5469636b6574206d757374206265206265747765656e20312d31303000000000604482015260640161033f565b335f908152602081905260408120805460ff191660ff8416179055805b60035481101561047457336001600160a01b03166003828154811061044a5761044a610de0565b5f918252602090912001546001600160a01b03160361046c5760019150610474565b600101610423565b50806104c957600380546001810182555f919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01805473ffffffffffffffffffffffffffffffffffffffff1916331790555b60035460011480156104db5750600554155b156104e557426005555b60405160ff8316815233907f544a428276e01bd3774fe90de75fee1b2b8bd04d8e999814d59efaa3b70318e7906020015b60405180910390a25050565b60038181548110610531575f80fd5b5f918252602090912001546001600160a01b0316905081565b600654811061059b5760405162461bcd60e51b815260206004820152601360248201527f496e76616c696420726f756e6420696e64657800000000000000000000000000604482015260640161033f565b600681815481106105ae576105ae610de0565b5f9182526020909120600490910201546001600160a01b031633146106155760405162461bcd60e51b815260206004820152601c60248201527f4e6f74207468652077696e6e6572206f66207468697320726f756e6400000000604482015260640161033f565b6006818154811061062857610628610de0565b5f91825260209091206003600490920201015460ff161561068b5760405162461bcd60e51b815260206004820152601560248201527f5072697a6520616c726561647920636c61696d65640000000000000000000000604482015260640161033f565b5f6006828154811061069f5761069f610de0565b905f5260205f2090600402016001015490505f81116107005760405162461bcd60e51b815260206004820152601160248201527f4e6f207072697a6520746f20636c61696d000000000000000000000000000000604482015260640161033f565b60016006838154811061071557610715610de0565b5f9182526020822060049190910201600301805460ff19169215159290921790915560405133916108fc841502918491818181858888f19350505050158015610760573d5f803e3d5ffd5b5060405181815233907f95681e512bc0fe659e195e06c283eada494316f3d801213e48e7101af92bf77090602001610516565b600154600160a01b900460ff166107ec5760405162461bcd60e51b815260206004820152601560248201527f4c6f7474657279206e6f7420647261776e207965740000000000000000000000604482015260640161033f565b6001546001600160a01b031633146108465760405162461bcd60e51b815260206004820152600e60248201527f4e6f74207468652077696e6e6572000000000000000000000000000000000000604482015260640161033f565b47806108945760405162461bcd60e51b815260206004820152601160248201527f4e6f207072697a6520746f20636c61696d000000000000000000000000000000604482015260640161033f565b6001546040516001600160a01b039091169082156108fc029083905f818181858888f193505050501580156108cb573d5f803e3d5ffd5b50600654156109195760068054600191906108e7908390610e08565b815481106108f7576108f7610de0565b5f9182526020909120600490910201600301805460ff19169115159190911790555b6001546040518281526001600160a01b03909116907f95681e512bc0fe659e195e06c283eada494316f3d801213e48e7101af92bf7709060200160405180910390a250565b600154600160a01b900460ff16156109b85760405162461bcd60e51b815260206004820152601560248201527f4c6f747465727920616c726561647920647261776e0000000000000000000000604482015260640161033f565b600354610a075760405162461bcd60e51b815260206004820152600f60248201527f4e6f207061727469636970616e74730000000000000000000000000000000000604482015260640161033f565b6004546001600160a01b0316331480610a2e5750600554610a2a90610258610e21565b4210155b610a865760405162461bcd60e51b815260206004820152602360248201527f44726177206e6f7420617661696c61626c6520796574206f72206e6f7420616460448201526236b4b760e91b606482015260840161033f565b600354604080514260208201524491810191909152606081018290525f9190608001604051602081830303815290604052805190602001205f1c610aca9190610e34565b905060038181548110610adf57610adf610de0565b5f918252602080832091909101546001805474ffffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392831617600160a01b178082554260058190556040805160808101825292851683524783870190815283820192835260608401888152600680548088018255908a52945160049095027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f8101805496891673ffffffffffffffffffffffffffffffffffffffff199097169690961790955590517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4085015591517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4184015590517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d42909201805492151560ff199093169290921790915590549091168084528383529281902054905160ff90911680825292917f097f81796acde1f8350124eadba95449daef1cfdbc53c651caa49b7b1673a0cf9101610516565b600154600160a01b900460ff16610cc35760405162461bcd60e51b815260206004820152601560248201527f4c6f7474657279206e6f7420647261776e207965740000000000000000000000604482015260640161033f565b6001805474ffffffffffffffffffffffffffffffffffffffffff1916905542600555610cf060035f610d6c565b60405142815233907f98ab7e823882180c9f7d9ed464e68d4f8fbe0dde6ac4e6f9ef956dbc424e61929060200160405180910390a2565b60068181548110610d36575f80fd5b5f91825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919060ff1684565b5080545f8255905f5260205f2090810190610d879190610d8a565b50565b5b80821115610d9e575f8155600101610d8b565b5090565b5f60208284031215610db2575f80fd5b813560ff81168114610dc2575f80fd5b9392505050565b5f60208284031215610dd9575f80fd5b5035919050565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b81810381811115610e1b57610e1b610df4565b92915050565b80820180821115610e1b57610e1b610df4565b5f82610e4e57634e487b7160e01b5f52601260045260245ffd5b50069056fea2646970667358221220c95358f705d8257644c766435438968a09226f2a98b5388ac79cb6ea13095f3464736f6c63430008180033";

type ConfidentialLotteryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConfidentialLotteryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConfidentialLottery__factory extends ContractFactory {
  constructor(...args: ConfidentialLotteryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ConfidentialLottery & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ConfidentialLottery__factory {
    return super.connect(runner) as ConfidentialLottery__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConfidentialLotteryInterface {
    return new Interface(_abi) as ConfidentialLotteryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ConfidentialLottery {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ConfidentialLottery;
  }
}
