/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  ConfidentialLotteryFHE,
  ConfidentialLotteryFHEInterface,
} from "../ConfidentialLotteryFHE";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "HandlesAlreadySavedForRequestID",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidKMSSignatures",
    type: "error",
  },
  {
    inputs: [],
    name: "NoHandleFoundForRequestID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
    ],
    name: "DecryptionFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LotteryReset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PrizeClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "externalEuint8",
        name: "ticketHandle",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedTicketProof",
        type: "bytes",
      },
    ],
    name: "TicketPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "randomIndexHandle",
        type: "bytes32",
      },
    ],
    name: "WinnerDecryptionRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedWinningNumber",
        type: "bytes",
      },
    ],
    name: "WinnerDrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint8",
        name: "encryptedTicketHandle",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "encryptedTicketProof",
        type: "bytes",
      },
    ],
    name: "buyTicket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_roundIndex",
        type: "uint256",
      },
    ],
    name: "claimPastPrize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimPrize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "drawPending",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "drawWinner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "decryptedResult",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "decryptionProof",
        type: "bytes",
      },
    ],
    name: "fulfillRandomIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyTicket",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getParticipantCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_roundIndex",
        type: "uint256",
      },
    ],
    name: "getPastRound",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPastRoundsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isDrawn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastDrawTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "participants",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pastRounds",
    outputs: [
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "prize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "drawTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "startNewRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ticketPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052655af3107a4000600255348015610019575f80fd5b506101946100b8604080516080810182525f80825260208201819052918101829052606081019190915250604080516080810182527350157cffd6bbfa2dece204a89ec419c23ef5755d815273cd3ab3bd6bcc0c0bf3e27912a92043e817b1cf69602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b80517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970080546001600160a01b03199081166001600160a01b039384161790915560208301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497018054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b600480546001600160a01b03191633179055611d71806101b35f395ff3fe608060405260043610610157575f3560e01c806370740ac9116100bb578063c064501111610071578063dfbf53ae11610057578063dfbf53ae14610382578063f851a440146103a1578063fd9ba024146103c0575f80fd5b8063c064501114610323578063da1f12ab1461036e575f80fd5b8063ad605729116100a1578063ad605729146102e7578063b2185bb1146102fb578063bd85948c1461030f575f80fd5b806370740ac9146102c05780639657ab79146102d4575f80fd5b80633c2bcadc116101105780635b0df84e116100f65780635b0df84e1461026c5780635cbbd6351461028b5780636060ffaa146102a0575f80fd5b80633c2bcadc146101fd5780633f7daf811461022d575f80fd5b806313cd372e1161014057806313cd372e1461019157806327c66ca0146101a557806335c1d349146101c6575f80fd5b806312065fe01461015b5780631209b1f61461017c575b5f80fd5b348015610166575f80fd5b50475b6040519081526020015b60405180910390f35b348015610187575f80fd5b5061016960025481565b34801561019c575f80fd5b50600654610169565b3480156101b0575f80fd5b506101c46101bf36600461197f565b6103df565b005b3480156101d1575f80fd5b506101e56101e03660046119e7565b6106ce565b6040516001600160a01b039091168152602001610173565b348015610208575f80fd5b5060015461021d90600160a01b900460ff1681565b6040519015158152602001610173565b348015610238575f80fd5b50335f9081526020818152604091829020548251808301919091528251808203909201825282019182905261017391611a4b565b348015610277575f80fd5b506101c46102863660046119e7565b6106f6565b348015610296575f80fd5b5061016960055481565b3480156102ab575f80fd5b5060015461021d90600160a81b900460ff1681565b3480156102cb575f80fd5b506101c4610947565b6101c46102e2366004611a5d565b610b5f565b3480156102f2575f80fd5b50600354610169565b348015610306575f80fd5b506101c4610db7565b34801561031a575f80fd5b506101c4611053565b34801561032e575f80fd5b5061034261033d3660046119e7565b61115d565b604080516001600160a01b03909516855260208501939093529183015215156060820152608001610173565b348015610379575f80fd5b50612711610169565b34801561038d575f80fd5b506001546101e5906001600160a01b031681565b3480156103ac575f80fd5b506004546101e5906001600160a01b031681565b3480156103cb575f80fd5b506103426103da3660046119e7565b61122b565b600154600160a81b900460ff1661043d5760405162461bcd60e51b815260206004820152600f60248201527f4e6f2070656e64696e672064726177000000000000000000000000000000000060448201526064015b60405180910390fd5b600754831461048e5760405162461bcd60e51b815260206004820152601260248201527f556e6578706563746564207265717565737400000000000000000000000000006044820152606401610434565b610499838383611270565b6020825110156104eb5760405162461bcd60e51b815260206004820152601160248201527f496e76616c696420636c656172746578740000000000000000000000000000006044820152606401610434565b6003545f906104f984611ad2565b6105039190611af8565b90506003818154811061051857610518611b17565b5f9182526020808320919091015460018054600160a01b6001600160a01b0393841674ffffffffffffffffffffffffffffffffffffffffff19909216919091171760ff60a81b19811682554260058190556040805160808101825292851683524783870190815283820192835260608401888152600680548088018255908a5294517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f6004909602958601805473ffffffffffffffffffffffffffffffffffffffff191691891691909117905590517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4085015591517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4184015590517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d42909201805460ff1916921515929092179091559054909116808452838352928190205481518084018290528251808203909401845282019182905292907fd0ffa1b4a896570e5225f6b66286e07a6dda6343cadc96853362b079b2ec0840906106be908490611a4b565b60405180910390a2505050505050565b600381815481106106dd575f80fd5b5f918252602090912001546001600160a01b0316905081565b60065481106107475760405162461bcd60e51b815260206004820152601360248201527f496e76616c696420726f756e6420696e646578000000000000000000000000006044820152606401610434565b6006818154811061075a5761075a611b17565b5f9182526020909120600490910201546001600160a01b031633146107c15760405162461bcd60e51b815260206004820152601c60248201527f4e6f74207468652077696e6e6572206f66207468697320726f756e64000000006044820152606401610434565b600681815481106107d4576107d4611b17565b5f91825260209091206003600490920201015460ff16156108375760405162461bcd60e51b815260206004820152601560248201527f5072697a6520616c726561647920636c61696d656400000000000000000000006044820152606401610434565b5f6006828154811061084b5761084b611b17565b905f5260205f2090600402016001015490505f81116108ac5760405162461bcd60e51b815260206004820152601160248201527f4e6f207072697a6520746f20636c61696d0000000000000000000000000000006044820152606401610434565b6001600683815481106108c1576108c1611b17565b5f9182526020822060049190910201600301805460ff19169215159290921790915560405133916108fc841502918491818181858888f1935050505015801561090c573d5f803e3d5ffd5b5060405181815233907f95681e512bc0fe659e195e06c283eada494316f3d801213e48e7101af92bf770906020015b60405180910390a25050565b600154600160a01b900460ff166109a05760405162461bcd60e51b815260206004820152601560248201527f4c6f7474657279206e6f7420647261776e2079657400000000000000000000006044820152606401610434565b600154600160a81b900460ff16156109ed5760405162461bcd60e51b815260206004820152601060248201526f4472617720696e2070726f677265737360801b6044820152606401610434565b6001546001600160a01b03163314610a475760405162461bcd60e51b815260206004820152600e60248201527f4e6f74207468652077696e6e65720000000000000000000000000000000000006044820152606401610434565b4780610a955760405162461bcd60e51b815260206004820152601160248201527f4e6f207072697a6520746f20636c61696d0000000000000000000000000000006044820152606401610434565b6001546040516001600160a01b039091169082156108fc029083905f818181858888f19350505050158015610acc573d5f803e3d5ffd5b5060065415610b1a576006805460019190610ae8908390611b3f565b81548110610af857610af8611b17565b5f9182526020909120600490910201600301805460ff19169115159190911790555b6001546040518281526001600160a01b03909116907f95681e512bc0fe659e195e06c283eada494316f3d801213e48e7101af92bf7709060200160405180910390a250565b6002543414610bb05760405162461bcd60e51b815260206004820152601660248201527f496e636f7272656374207469636b6574207072696365000000000000000000006044820152606401610434565b600154600160a01b900460ff1615610c0a5760405162461bcd60e51b815260206004820152601560248201527f4c6f747465727920616c726561647920647261776e00000000000000000000006044820152606401610434565b600154600160a81b900460ff1615610c575760405162461bcd60e51b815260206004820152601060248201526f4472617720696e2070726f677265737360801b6044820152606401610434565b610c968383838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506112d992505050565b335f90815260208190526040812091909155805b600354811015610cfb57336001600160a01b031660038281548110610cd157610cd1611b17565b5f918252602090912001546001600160a01b031603610cf35760019150610cfb565b600101610caa565b5080610d5057600380546001810182555f919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01805473ffffffffffffffffffffffffffffffffffffffff1916331790555b6003546001148015610d625750600554155b15610d6c57426005555b336001600160a01b03167fa1e54f68bbdcebab820a28b8eaf71379970159cc4fa66c1409eefc0acc2480b4858585604051610da993929190611b52565b60405180910390a250505050565b600154600160a01b900460ff1615610e115760405162461bcd60e51b815260206004820152601560248201527f4c6f747465727920616c726561647920647261776e00000000000000000000006044820152606401610434565b600154600160a81b900460ff1615610e5e5760405162461bcd60e51b815260206004820152601060248201526f4472617720696e2070726f677265737360801b6044820152606401610434565b600354610ead5760405162461bcd60e51b815260206004820152600f60248201527f4e6f207061727469636970616e747300000000000000000000000000000000006044820152606401610434565b6004546001600160a01b0316331480610ed45750600554610ed090610258611b87565b4210155b610f2c5760405162461bcd60e51b815260206004820152602360248201527f44726177206e6f7420617661696c61626c6520796574206f72206e6f7420616460448201526236b4b760e91b6064820152608401610434565b60035460ff1015610f7f5760405162461bcd60e51b815260206004820152601560248201527f546f6f206d616e79207061727469636970616e747300000000000000000000006044820152606401610434565b6003545f90610f8d906112ef565b6040805160018082528183019092529192505f91906020808301908036833701905050905081815f81518110610fc557610fc5611b17565b602002602001018181525050805f81518110610fe357610fe3611b17565b60209081029190910101516008556110028163013e336560e51b6112fe565b60078190556001805460ff60a81b1916600160a81b179055426005556008546040517f12c967e1342321a711d64e1317cdfd204e4991f2d72f509a306a2a70bf8b812b9161093b9190815260200190565b600154600160a01b900460ff166110ac5760405162461bcd60e51b815260206004820152601560248201527f4c6f7474657279206e6f7420647261776e2079657400000000000000000000006044820152606401610434565b600154600160a81b900460ff16156110f95760405162461bcd60e51b815260206004820152601060248201526f4472617720696e2070726f677265737360801b6044820152606401610434565b6001805474ffffffffffffffffffffffffffffffffffffffffff191690554260055561112660035f611867565b60405142815233907f98ab7e823882180c9f7d9ed464e68d4f8fbe0dde6ac4e6f9ef956dbc424e61929060200160405180910390a2565b5f805f8060068054905085106111b55760405162461bcd60e51b815260206004820152601360248201527f496e76616c696420726f756e6420696e646578000000000000000000000000006044820152606401610434565b5f600686815481106111c9576111c9611b17565b5f9182526020918290206040805160808101825260049390930290910180546001600160a01b03168084526001820154948401859052600282015492840183905260039091015460ff1615156060909301839052999298509650945092505050565b6006818154811061123a575f80fd5b5f91825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919060ff1684565b5f61127a8461130a565b90505f6112888285856113db565b9050806112a85760405163cf6c44e960e01b815260040160405180910390fd5b60405185907f1af0453083661051f6e56e5c070792320652e612154bf9af8637bb1e7655b99d905f90a25050505050565b5f6112e6838360026114c9565b90505b92915050565b5f6112e98260ff1660026115e9565b5f6112e683835f6116a6565b5f8181527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf0160205260408120546060917f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf0091900361137b5760405163d66ca67560e01b815260040160405180910390fd5b5f838152600182016020908152604091829020805483518184028101840190945280845290918301828280156113ce57602002820191905f5260205f20905b8154815260200190600101908083116113ba575b5050505050915050919050565b5f80835160206113eb9190611b87565b6113f6906020611b87565b90505f848260405160200161140c929190611b9a565b60405160208183030381529060405290505f6114457f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970090565b60038101546040516378542ead60e01b81529192506001600160a01b0316906378542ead9061147c908a9086908a90600401611bf5565b6020604051808303815f875af1158015611498573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114bc9190611c37565b93505050505b9392505050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163196d0b9b60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b039091169063196d0b9b90611542908890339089908990600401611c76565b6020604051808303815f875af115801561155e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115829190611cb5565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b1580156115cb575f80fd5b505af11580156115dd573d5f803e3d5ffd5b50505050509392505050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701546040516324777a3f60e11b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b03909116906348eef47e9061165e9087908790600401611ccc565b6020604051808303815f875af115801561167a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061169e9190611cb5565b949350505050565b7f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf0080547f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497008054604051637d6e912360e11b81529293926001600160a01b039091169063fadd22469061171c908990600401611ce0565b5f604051808303815f87803b158015611733575f80fd5b505af1158015611745573d5f803e3d5ffd5b5050506002820154604051633263b83b60e01b81526001600160a01b039091169150633263b83b9086906117819087908b908b90600401611cf2565b5f604051808303818588803b158015611798575f80fd5b505af11580156117aa573d5f803e3d5ffd5b50505050506117b983876117d4565b8154825f6117c683611d23565b919050555050509392505050565b5f8281527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf0160205260409020547f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf00901561184157604051633f06d22b60e01b815260040160405180910390fd5b5f8381526001820160209081526040909120835161186192850190611885565b50505050565b5080545f8255905f5260205f209081019061188291906118ce565b50565b828054828255905f5260205f209081019282156118be579160200282015b828111156118be5782518255916020019190600101906118a3565b506118ca9291506118ce565b5090565b5b808211156118ca575f81556001016118cf565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112611905575f80fd5b813567ffffffffffffffff80821115611920576119206118e2565b604051601f8301601f19908116603f01168101908282118183101715611948576119486118e2565b81604052838152866020858801011115611960575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f805f60608486031215611991575f80fd5b83359250602084013567ffffffffffffffff808211156119af575f80fd5b6119bb878388016118f6565b935060408601359150808211156119d0575f80fd5b506119dd868287016118f6565b9150509250925092565b5f602082840312156119f7575f80fd5b5035919050565b5f5b83811015611a18578181015183820152602001611a00565b50505f910152565b5f8151808452611a378160208601602086016119fe565b601f01601f19169290920160200192915050565b602081525f6112e66020830184611a20565b5f805f60408486031215611a6f575f80fd5b83359250602084013567ffffffffffffffff80821115611a8d575f80fd5b818601915086601f830112611aa0575f80fd5b813581811115611aae575f80fd5b876020828501011115611abf575f80fd5b6020830194508093505050509250925092565b80516020808301519190811015611af2575f198160200360031b1b821691505b50919050565b5f82611b1257634e487b7160e01b5f52601260045260245ffd5b500690565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b818103818111156112e9576112e9611b2b565b83815260406020820152816040820152818360608301375f818301606090810191909152601f909201601f1916010192915050565b808201808211156112e9576112e9611b2b565b5f8351611bab8184602088016119fe565b9190910191825250602001919050565b5f815180845260208085019450602084015f5b83811015611bea57815187529582019590820190600101611bce565b509495945050505050565b606081525f611c076060830186611bbb565b8281036020840152611c198186611a20565b90508281036040840152611c2d8185611a20565b9695505050505050565b5f60208284031215611c47575f80fd5b815180151581146114c2575f80fd5b60548110611c7257634e487b7160e01b5f52602160045260245ffd5b9052565b8481526001600160a01b0384166020820152608060408201525f611c9d6080830185611a20565b9050611cac6060830184611c56565b95945050505050565b5f60208284031215611cc5575f80fd5b5051919050565b828152604081016114c26020830184611c56565b602081525f6112e66020830184611bbb565b838152606060208201525f611d0a6060830185611bbb565b905063ffffffff60e01b83166040830152949350505050565b5f60018201611d3457611d34611b2b565b506001019056fea2646970667358221220dc5073f4babb915ca0e9e6c85d7d4df841aa921c625e9dd66b17a2bccad1d60064736f6c63430008180033";

type ConfidentialLotteryFHEConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConfidentialLotteryFHEConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConfidentialLotteryFHE__factory extends ContractFactory {
  constructor(...args: ConfidentialLotteryFHEConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ConfidentialLotteryFHE & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ConfidentialLotteryFHE__factory {
    return super.connect(runner) as ConfidentialLotteryFHE__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConfidentialLotteryFHEInterface {
    return new Interface(_abi) as ConfidentialLotteryFHEInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ConfidentialLotteryFHE {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ConfidentialLotteryFHE;
  }
}
