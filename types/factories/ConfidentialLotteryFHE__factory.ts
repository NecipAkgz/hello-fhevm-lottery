/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  ConfidentialLotteryFHE,
  ConfidentialLotteryFHEInterface,
} from "../ConfidentialLotteryFHE";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "LotteryReset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "PrizeClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "externalEuint8",
        name: "ticketHandle",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedTicketProof",
        type: "bytes",
      },
    ],
    name: "TicketPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "encryptedWinningNumber",
        type: "bytes",
      },
    ],
    name: "WinnerDrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "externalEuint8",
        name: "encryptedTicketHandle",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "encryptedTicketProof",
        type: "bytes",
      },
    ],
    name: "buyTicket",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_roundIndex",
        type: "uint256",
      },
    ],
    name: "claimPastPrize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimPrize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "drawWinner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyTicket",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getParticipantCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_roundIndex",
        type: "uint256",
      },
    ],
    name: "getPastRound",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPastRoundsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isDrawn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastDrawTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "participants",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pastRounds",
    outputs: [
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "prize",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "drawTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "startNewRound",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ticketPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052655af3107a4000600255348015610019575f80fd5b506101946100b8604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d595602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b80517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970080546001600160a01b03199081166001600160a01b039384161790915560208301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497018054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b600480546001600160a01b0319163317905561124b806101b35f395ff3fe608060405260043610610123575f3560e01c80639657ab79116100a1578063c064501111610071578063dfbf53ae11610057578063dfbf53ae1461030f578063f851a4401461032e578063fd9ba0241461034d575f80fd5b8063c0645011146102b0578063da1f12ab146102fb575f80fd5b80639657ab7914610261578063ad60572914610274578063b2185bb114610288578063bd85948c1461029c575f80fd5b80633c2bcadc116100f65780635b0df84e116100dc5780635b0df84e146102175780635cbbd6351461023857806370740ac91461024d575f80fd5b80633c2bcadc146101a85780633f7daf81146101d8575f80fd5b806312065fe0146101275780631209b1f61461014857806313cd372e1461015d57806335c1d34914610171575b5f80fd5b348015610132575f80fd5b50475b6040519081526020015b60405180910390f35b348015610153575f80fd5b5061013560025481565b348015610168575f80fd5b50600654610135565b34801561017c575f80fd5b5061019061018b366004611027565b61036c565b6040516001600160a01b03909116815260200161013f565b3480156101b3575f80fd5b506001546101c890600160a01b900460ff1681565b604051901515815260200161013f565b3480156101e3575f80fd5b50335f9081526020818152604091829020548251808301919091528251808203909201825282019182905261013f91611081565b348015610222575f80fd5b50610236610231366004611027565b610394565b005b348015610243575f80fd5b5061013560055481565b348015610258575f80fd5b506102366105e9565b61023661026f366004611093565b6107b4565b34801561027f575f80fd5b50600354610135565b348015610293575f80fd5b506102366109bf565b3480156102a7575f80fd5b50610236610ceb565b3480156102bb575f80fd5b506102cf6102ca366004611027565b610da8565b604080516001600160a01b0390951685526020850193909352918301521515606082015260800161013f565b348015610306575f80fd5b50612711610135565b34801561031a575f80fd5b50600154610190906001600160a01b031681565b348015610339575f80fd5b50600454610190906001600160a01b031681565b348015610358575f80fd5b506102cf610367366004611027565b610e76565b6003818154811061037b575f80fd5b5f918252602090912001546001600160a01b0316905081565b60065481106103ea5760405162461bcd60e51b815260206004820152601360248201527f496e76616c696420726f756e6420696e6465780000000000000000000000000060448201526064015b60405180910390fd5b600681815481106103fd576103fd611108565b5f9182526020909120600490910201546001600160a01b031633146104645760405162461bcd60e51b815260206004820152601c60248201527f4e6f74207468652077696e6e6572206f66207468697320726f756e640000000060448201526064016103e1565b6006818154811061047757610477611108565b5f91825260209091206003600490920201015460ff16156104da5760405162461bcd60e51b815260206004820152601560248201527f5072697a6520616c726561647920636c61696d6564000000000000000000000060448201526064016103e1565b5f600682815481106104ee576104ee611108565b905f5260205f2090600402016001015490505f811161054f5760405162461bcd60e51b815260206004820152601160248201527f4e6f207072697a6520746f20636c61696d00000000000000000000000000000060448201526064016103e1565b60016006838154811061056457610564611108565b5f9182526020822060049190910201600301805460ff19169215159290921790915560405133916108fc841502918491818181858888f193505050501580156105af573d5f803e3d5ffd5b5060405181815233907f95681e512bc0fe659e195e06c283eada494316f3d801213e48e7101af92bf7709060200160405180910390a25050565b600154600160a01b900460ff166106425760405162461bcd60e51b815260206004820152601560248201527f4c6f7474657279206e6f7420647261776e20796574000000000000000000000060448201526064016103e1565b6001546001600160a01b0316331461069c5760405162461bcd60e51b815260206004820152600e60248201527f4e6f74207468652077696e6e657200000000000000000000000000000000000060448201526064016103e1565b47806106ea5760405162461bcd60e51b815260206004820152601160248201527f4e6f207072697a6520746f20636c61696d00000000000000000000000000000060448201526064016103e1565b6001546040516001600160a01b039091169082156108fc029083905f818181858888f19350505050158015610721573d5f803e3d5ffd5b506006541561076f57600680546001919061073d908390611130565b8154811061074d5761074d611108565b5f9182526020909120600490910201600301805460ff19169115159190911790555b6001546040518281526001600160a01b03909116907f95681e512bc0fe659e195e06c283eada494316f3d801213e48e7101af92bf7709060200160405180910390a250565b60025434146108055760405162461bcd60e51b815260206004820152601660248201527f496e636f7272656374207469636b65742070726963650000000000000000000060448201526064016103e1565b600154600160a01b900460ff161561085f5760405162461bcd60e51b815260206004820152601560248201527f4c6f747465727920616c726561647920647261776e000000000000000000000060448201526064016103e1565b61089e8383838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610ebb92505050565b335f90815260208190526040812091909155805b60035481101561090357336001600160a01b0316600382815481106108d9576108d9611108565b5f918252602090912001546001600160a01b0316036108fb5760019150610903565b6001016108b2565b508061095857600380546001810182555f919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b01805473ffffffffffffffffffffffffffffffffffffffff1916331790555b600354600114801561096a5750600554155b1561097457426005555b336001600160a01b03167fa1e54f68bbdcebab820a28b8eaf71379970159cc4fa66c1409eefc0acc2480b48585856040516109b193929190611143565b60405180910390a250505050565b600154600160a01b900460ff1615610a195760405162461bcd60e51b815260206004820152601560248201527f4c6f747465727920616c726561647920647261776e000000000000000000000060448201526064016103e1565b600354610a685760405162461bcd60e51b815260206004820152600f60248201527f4e6f207061727469636970616e7473000000000000000000000000000000000060448201526064016103e1565b6004546001600160a01b0316331480610a8f5750600554610a8b90610258611178565b4210155b610ae75760405162461bcd60e51b815260206004820152602360248201527f44726177206e6f7420617661696c61626c6520796574206f72206e6f7420616460448201526236b4b760e91b60648201526084016103e1565b600354604080514260208201524491810191909152606081018290525f9190608001604051602081830303815290604052805190602001205f1c610b2b919061118b565b905060038181548110610b4057610b40611108565b5f918252602080832091909101546001805474ffffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392831617600160a01b178082554260058190556040805160808101825292851683524783870190815283820192835260608401888152600680548088018255908a52945160049095027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f8101805496891673ffffffffffffffffffffffffffffffffffffffff199097169690961790955590517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4085015591517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4184015590517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d42909201805492151560ff19909316929092179091559054909116808452838352928190205481518084018290528251808203909401845282019182905292907fd0ffa1b4a896570e5225f6b66286e07a6dda6343cadc96853362b079b2ec084090610cde908490611081565b60405180910390a2505050565b600154600160a01b900460ff16610d445760405162461bcd60e51b815260206004820152601560248201527f4c6f7474657279206e6f7420647261776e20796574000000000000000000000060448201526064016103e1565b6001805474ffffffffffffffffffffffffffffffffffffffffff1916905542600555610d7160035f610ff1565b60405142815233907f98ab7e823882180c9f7d9ed464e68d4f8fbe0dde6ac4e6f9ef956dbc424e61929060200160405180910390a2565b5f805f806006805490508510610e005760405162461bcd60e51b815260206004820152601360248201527f496e76616c696420726f756e6420696e6465780000000000000000000000000060448201526064016103e1565b5f60068681548110610e1457610e14611108565b5f9182526020918290206040805160808101825260049390930290910180546001600160a01b03168084526001820154948401859052600282015492840183905260039091015460ff1615156060909301839052999298509650945092505050565b60068181548110610e85575f80fd5b5f91825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919060ff1684565b5f610ec883836002610ed1565b90505b92915050565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163196d0b9b60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b039091169063196d0b9b90610f4a9088903390899089906004016111aa565b6020604051808303815f875af1158015610f66573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f8a91906111fe565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b158015610fd3575f80fd5b505af1158015610fe5573d5f803e3d5ffd5b50505050509392505050565b5080545f8255905f5260205f209081019061100c919061100f565b50565b5b80821115611023575f8155600101611010565b5090565b5f60208284031215611037575f80fd5b5035919050565b5f81518084525f5b8181101561106257602081850181015186830182015201611046565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f610ec8602083018461103e565b5f805f604084860312156110a5575f80fd5b83359250602084013567ffffffffffffffff808211156110c3575f80fd5b818601915086601f8301126110d6575f80fd5b8135818111156110e4575f80fd5b8760208285010111156110f5575f80fd5b6020830194508093505050509250925092565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b81810381811115610ecb57610ecb61111c565b83815260406020820152816040820152818360608301375f818301606090810191909152601f909201601f1916010192915050565b80820180821115610ecb57610ecb61111c565b5f826111a557634e487b7160e01b5f52601260045260245ffd5b500690565b8481526001600160a01b0384166020820152608060408201525f6111d1608083018561103e565b9050605483106111ef57634e487b7160e01b5f52602160045260245ffd5b82606083015295945050505050565b5f6020828403121561120e575f80fd5b505191905056fea26469706673582212205d3bb8cb51f183d027c9264f45713253d25960f91b2f01fa5dafecdbe0ee848564736f6c63430008180033";

type ConfidentialLotteryFHEConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConfidentialLotteryFHEConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConfidentialLotteryFHE__factory extends ContractFactory {
  constructor(...args: ConfidentialLotteryFHEConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ConfidentialLotteryFHE & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ConfidentialLotteryFHE__factory {
    return super.connect(runner) as ConfidentialLotteryFHE__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConfidentialLotteryFHEInterface {
    return new Interface(_abi) as ConfidentialLotteryFHEInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ConfidentialLotteryFHE {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ConfidentialLotteryFHE;
  }
}
